#!/usr/bin/env node

const puppeteer = require('puppeteer-extra');
const StealthPlugin = require('puppeteer-extra-plugin-stealth');
const fs = require('fs').promises;
const path = require('path');

puppeteer.use(StealthPlugin());

// Nh·∫≠n tham s·ªë t·ª´ command line
const [, , baseUrl, start, end, outputFolder, singleMode] = process.argv;

if (!baseUrl || !start || !end || !outputFolder) {
  console.error('‚ùå Thi·∫øu tham s·ªë. C√∫ ph√°p: node crawl_original_cjs.js <baseUrl> <startChapter> <endChapter> <outputFolder> [singleMode]');
  process.exit(1);
}

const START_CHAPTER = parseInt(start);
const END_CHAPTER = parseInt(end);
const SINGLE_MODE = singleMode === '1'; // Ch·∫ø ƒë·ªô crawl m·ªôt ch∆∞∆°ng duy nh·∫•t

(async () => {
  // T·∫°o th∆∞ m·ª•c n·∫øu ch∆∞a t·ªìn t·∫°i
  try {
    await fs.mkdir(outputFolder, { recursive: true });
    if (!SINGLE_MODE) {
      console.log(`‚úÖ Th∆∞ m·ª•c l∆∞u file: ${outputFolder}`);
    }
  } catch (e) {
    console.error('‚ùå L·ªói t·∫°o th∆∞ m·ª•c:', e.message);
    return;
  }

  // Launch browser - s·ª≠ d·ª•ng c·∫•u h√¨nh t·ª´ code g·ªëc
  const browser = await puppeteer.launch({ 
    headless: 'new', // S·ª≠ d·ª•ng headless cho production
    args: [
      '--no-sandbox',
      '--disable-setuid-sandbox',
      '--disable-dev-shm-usage'
    ]
  });
  
  const page = await browser.newPage();

  // N·∫øu ·ªü ch·∫ø ƒë·ªô single mode, ch·ªâ log ra th√¥ng tin c·∫ßn thi·∫øt
  if (!SINGLE_MODE) {
    console.log(`üîç B·∫Øt ƒë·∫ßu crawl t·ª´ ch∆∞∆°ng ${START_CHAPTER} ƒë·∫øn ch∆∞∆°ng ${END_CHAPTER}`);
  }

  for (let chapter = START_CHAPTER; chapter <= END_CHAPTER; chapter++) {
    const url = `${baseUrl}${chapter}.html`;
    
    if (!SINGLE_MODE) {
      console.log(`üìñ ƒêang duy·ªát: ${url}`);
    }

    try {
      await page.goto(url, { waitUntil: 'domcontentloaded', timeout: 30000 });

      const content = await page.$eval('div.chapter-c', el => el.innerText);
      
      if (!SINGLE_MODE) {
        console.log(`‚úÖ L·∫•y th√†nh c√¥ng ch∆∞∆°ng ${chapter}`);
      }

      // ƒê∆∞·ªùng d·∫´n file l∆∞u
      const filename = path.join(outputFolder, `chuong-${chapter}.txt`);
      await fs.writeFile(filename, content, 'utf-8');
      
      if (!SINGLE_MODE) {
        console.log(`üíæ ƒê√£ l∆∞u ch∆∞∆°ng ${chapter} v√†o file ${filename}`);
      }
      
    } catch (e) {
      console.error(`‚ùå L·ªói ch∆∞∆°ng ${chapter}:`, e.message);
      if (SINGLE_MODE) {
        await browser.close();
        process.exit(1);
      }
    }
  }

  await browser.close();
  
  if (!SINGLE_MODE) {
    console.log('üéâ ƒê√£ crawl xong t·∫•t c·∫£ ch∆∞∆°ng.');
  }
})();
